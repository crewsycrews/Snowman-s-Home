go.property("score", 1)
go.property("speed", -240)

function init(self)
	self.timer = 1/2
	local width = tonumber(sys.get_config("display.width"))
	local pos = go.get_position()
	local sx = go.get("#sprite", "size.x")
	pos.x = width + sx
	-- pos.y = pos.y + 25
	go.set_position(pos)
	self.staying = false
	self.attacking = false
	self.anim = hash("zombieSwordsmanWalk")
	self.current_anim = hash("zombieSwordsmanWalk")
	self.state = "walk"
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	if self.staying and not self.state == "attackFinish" then
		self.anim = hash("zombieSwordsmanAttack")
		self.state = "Attacking"
	end

	if self.anim ~= self.current_anim then
		msg.post("#MAAAAN", "play_animation", { id = self.anim })
		self.current_anim = self.anim
	end
	
	local p = go.get_position()
	local snowman = go.get_position("Snowman")
	if self.staying == false then
		p.x = p.x + self.speed * dt
	end

	self.timer = self.timer - dt

	if p.x < snowman.x + 240 then
		self.staying = true
		if self.timer <= 0 then
			self.timer = 1/2
			self.state = "Attacking"
		end
	end

	go.set_position(p)

	
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") then
		-- msg.post("main#gui", "add_score", {amount = score})
		-- particlefx.play("#pickup")
		go.delete()
	end
	if message_id == hash("animation_done") then
			self.anim = hash("zombieSwordsmanIdle")
			self.state = "attackFinish"
		go.delete()
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
