go.property("HP", 200)
go.property("attackSpeed", 0.5) -- not implemented T_T
go.property("isActive", false)
function init(self)
	self.timer = 1/self.attackSpeed
	msg.post(".", "acquire_input_focus")
	self.firing = false
	self.dir = vmath.vector3(1, 0, 0)
	self.speed = 50
	self.current_anim = hash("idle")
	self.anim = hash("idle")
	self.state = "stand"
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	if self.isActive then
		self.timer = self.timer - dt
		local p = go.get_position()
		if p.x < 44 then
			p.x = p.x + 1.5
			go.set_position(p)
		end
		if self.firing then
			self.anim = hash("Attack")
			self.state = "Attacking"
			local pos = go.get_position()
			pos.x = pos.x + 17
			go.set_position(pos)
			
			local angle = math.atan2(self.dir.y, self.dir.x)
			local rot = vmath.quat_rotation_z(angle)
			local props = { dir = self.dir }
			factory.create("#ballsfactory", nil, rot, props)
		end
		if self.state == "attackFinish" then
			local pos = go.get_position()
			pos.x = pos.x - 17
			go.set_position(pos)
			self.state = "stand"
		end
		self.firing = false
		if self.anim ~= self.current_anim then
			msg.post("#MAAAAN", "play_animation", { id = self.anim })
			self.current_anim = self.anim
		end
	end
end

function on_message(self, message_id, message, sender)
	if self.anim == hash("Attack") then
		if message_id == hash("animation_done") then
			self.anim = hash("idle")
			self.state = "attackFinish"
		end
	end
	if message_id == hash("hit") then
		self.HP = self.HP - message.dmg
		print(self.HP)
	end
	if self.HP < 0 then
		-- self.anim = hash("die")
		-- self.state = "dying"
		go.delete()
		msg.post("/Night_Fight#fightNight", "GameOver")
	end
	if message_id == hash("animation_done") then
		if self.state == "dying" then
			go.delete()
		end
	end
end

function on_input(self, action_id, action)

	if action_id == hash("fire") and action.pressed then
		-- print(self.timingAnim)
		if self.state == "stand" then
			self.firing = true
		end
    end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
